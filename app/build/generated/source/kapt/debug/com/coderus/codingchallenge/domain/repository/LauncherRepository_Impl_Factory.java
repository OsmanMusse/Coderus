// Generated by Dagger (https://dagger.dev).
package com.coderus.codingchallenge.domain.repository;

import com.coderus.codingchallenge.data.local.AppDatabase;
import com.coderus.codingchallenge.data.remote.APIService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LauncherRepository_Impl_Factory implements Factory<LauncherRepository_Impl> {
  private final Provider<AppDatabase> dbProvider;

  private final Provider<APIService> apiServiceProvider;

  public LauncherRepository_Impl_Factory(Provider<AppDatabase> dbProvider,
      Provider<APIService> apiServiceProvider) {
    this.dbProvider = dbProvider;
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public LauncherRepository_Impl get() {
    return newInstance(dbProvider.get(), apiServiceProvider.get());
  }

  public static LauncherRepository_Impl_Factory create(Provider<AppDatabase> dbProvider,
      Provider<APIService> apiServiceProvider) {
    return new LauncherRepository_Impl_Factory(dbProvider, apiServiceProvider);
  }

  public static LauncherRepository_Impl newInstance(AppDatabase db, APIService apiService) {
    return new LauncherRepository_Impl(db, apiService);
  }
}
